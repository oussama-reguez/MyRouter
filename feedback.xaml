<Controls:MetroWindow 
     xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    x:Class="WpfApplication4.feedback"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication4"
        mc:Ignorable="d"
        WindowTitleBrush="White"
                       ResizeMode="NoResize"
     NonActiveWindowTitleBrush="White"
                       WindowCloseButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
                       WindowMinButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
        xmlns:l="clr-namespace:myRouter"
   BorderBrush="Black"
    BorderThickness="1"
        WindowStartupLocation="CenterScreen"
        SizeToContent="Height"
          Height="Auto" Width="470"  >

    <Window.Resources>

        <Style x:Key="CleanCloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">

            <Setter Property="Foreground"
                Value="Black" />
            <Style.Triggers>


                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBFBFBF" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF8D8D8D" />
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style 
           x:Key="restartButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#4598aa"  />
            <Setter Property="Foreground" Value="White"  />
        </Style>

        <Style 
           x:Key="reconnectButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#06a319"  />
            <Setter Property="Foreground" Value="White"  />
        </Style>


        <Style TargetType="Label" x:Key="RouterStyle" >
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="20" />

            <Setter Property="Foreground" Value="#858080"  />
        </Style>

        <Style TargetType="Label" x:Key="statusStyle">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="19" />

            <Setter Property="Foreground" Value="#858080"  />
        </Style>

        <Style TargetType="Label" x:Key="valueStyle">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />

            <Setter Property="Foreground" Value="#b1b1b1"  />
        </Style>


        <Style TargetType="Label" x:Key="titleStyle">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Rectangle Height="{TemplateBinding Height}"  
                           Fill="Gray" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style 
           x:Key="blueButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF29AFFF"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF1D8DD1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="windowButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="White"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFCECED4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="grayButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF9C9C9C"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF8B8B8B"/>
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style 
           x:Key="settingButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="Transparent"  />
            <Setter Property="Foreground" Value="Black"  />
        </Style>
        <Style 
           x:Key="greenButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF00B800"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF009700"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="redButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FFFF4646" />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFFF2D2D"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="orangeButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FFF1B761"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFEEA02E"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="noConnection">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="White"  />

            <Setter Property="BorderBrush" Value="White"  />
        </Style>
        <Style TargetType="Label" x:Key="title">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="12" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>


        <Style TargetType="Label" x:Key="values">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="14" />

            <Setter Property="Foreground" Value="#FFA6A6A6"  />
        </Style>
        <Style TargetType="Label" x:Key="titles">


            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="14" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>

        <Style TargetType="Label" x:Key="info">

            <Setter Property="FontWeight" Value="Normal"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="15" />

            <Setter Property="Opacity" Value="0.5"  />
            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>

        <Style TargetType="Label" x:Key="error">

            <Setter Property="FontWeight" Value="Normal"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Foreground" Value="Red"  />
            <Setter Property="Opacity" Value="0.5"  />

        </Style>


    </Window.Resources>
    <Controls:MetroWindow.LeftWindowCommands >
        <Controls:WindowCommands>
            <StackPanel Orientation="Horizontal">
                <Image x:Name="imgRouterre" Source="Resources/feedback.png"  VerticalAlignment="Center" Opacity="100"  Width="32" Height="32" Grid.Row="1"    
       RenderOptions.EdgeMode="Aliased" 
               RenderOptions.BitmapScalingMode="Fant" 
               >
                </Image>
                <Label  Content="feedback"  Style="{StaticResource ResourceKey=titleStyle}" VerticalAlignment="Center"></Label>

            </StackPanel>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <StackPanel Orientation="Vertical"  Margin="10,-5,0,0"   Width="Auto" HorizontalAlignment="Left" 
                    >
        <StackPanel Orientation="Vertical" x:Name="feedBackDialog"  >

            <Label Style="{StaticResource ResourceKey=info}"  Margin="0,-3,0,0" Content="we value your feedback tell us what's you think about the app"></Label>
            <Separator Height="10" Opacity="0"></Separator>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"   />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />


                </Grid.ColumnDefinitions>
                <Label Content="Your name :" Grid.Row="0" ></Label>
                <TextBox Width="150" x:Name="name" Grid.Row="0" Grid.Column="1">
                    <TextBox.Style>

                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush"  AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Padding="10,0,0,0" FontSize="10" Content="(optional) " Foreground="LightGray" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </TextBox.Style>
                </TextBox>
                <Separator Height="10" Grid.Row="1" Opacity="0"></Separator>
                <Label Content="Email          :"  Grid.Row="2"></Label>
                <TextBox Width="150" x:Name="email" Grid.Row="2" Grid.Column="1">
                    <TextBox.Style>

                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush"  AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Padding="10,0,0,0" FontSize="10" Content="(optional) " Foreground="LightGray" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </TextBox.Style>
                </TextBox>
                <Separator Height="10" Grid.Row="3" Opacity="0"></Separator>
                <Label Content="Description :"   Grid.Row="4"></Label>
                <TextBox Width="150 "  Height="50"  x:Name="description" Grid.Row="4" Grid.Column="1" TextWrapping="Wrap" AcceptsReturn="True">

                    <TextBox.Style>

                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush"   AlignmentY="Top" AlignmentX="Left" Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Padding="10,2,0,0" FontSize="10" Content="tell us what you think " Foreground="LightGray" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </TextBox.Style>
                </TextBox>
            </Grid>
            <StackPanel Orientation="Horizontal" >

            </StackPanel>
            <Separator Height="5" Opacity="0"></Separator>
            <StackPanel Orientation="Horizontal" >

            </StackPanel>
            <Separator Height="5" Opacity="0"></Separator>
            <StackPanel Orientation="Horizontal" >


            </StackPanel>
            <Separator Height="10" Opacity="0 "></Separator>
            <StackPanel Orientation="Horizontal">
                <Button Content="Send Feedback"  Margin="40,0,0,0" Width="100"  Style="{StaticResource orangeButton}"  HorizontalAlignment="Left" Click="Button_Click"></Button>
                <Separator Width="5" Opacity="0"></Separator>
                <Button Content="close" Width="50" Style="{StaticResource grayButton}" Click="close_click" ></Button>

            </StackPanel>
            <Separator Height="10" Opacity="0 "></Separator>

        </StackPanel>
        <StackPanel Orientation="Vertical"  x:Name="success" Visibility="Collapsed" >
            <Separator Height="10" Opacity="0"></Separator>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" >
                <Image x:Name="imgRouterree" Source="Resources/check.png"  VerticalAlignment="Center" Opacity="100"  Width="32" Height="32" Grid.Row="1"    
       RenderOptions.EdgeMode="Aliased" 
               RenderOptions.BitmapScalingMode="Fant" 
               >
                </Image>
                <Label Content="Thank you for your feedback ! " VerticalAlignment="Center"></Label>

            </StackPanel>
            <Separator Height="10" Opacity="0"></Separator>
            <StackPanel Orientation="Horizontal"  HorizontalAlignment="Center">

                <Separator Width="3" Opacity="0" ></Separator>
                <Button HorizontalAlignment="Center" Content="ok" Width="80" Style="{StaticResource ResourceKey=grayButton}" Height="25"></Button>
            </StackPanel>
            <Separator Height="10" Opacity="0"></Separator>
        </StackPanel>

    </StackPanel>

</Controls:MetroWindow>
