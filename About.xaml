<Controls:MetroWindow 
     xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    x:Class="WpfApplication4.About"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication4"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
        mc:Ignorable="d"
      ShowMaxRestoreButton="false" 
    ShowCloseButton="True"
    ShowMinButton="True"
   NonActiveWindowTitleBrush="White"
       WindowTitleBrush="White"
   
                       WindowCloseButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
                       WindowMinButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
       
        
   ResizeMode="NoResize"
   
         Height="Auto" Width="400" SizeToContent="Height"  >
    <i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior/>
    </i:Interaction.Behaviors>
    <Window.Resources>

        <Style x:Key="CleanCloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">

            <Setter Property="Foreground"
                Value="Black" />
            <Style.Triggers>


                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBFBFBF" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF8D8D8D" />
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style 
           x:Key="restartButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#4598aa"  />
            <Setter Property="Foreground" Value="White"  />
        </Style>

        <Style 
           x:Key="reconnectButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#06a319"  />
            <Setter Property="Foreground" Value="White"  />
        </Style>


        <Style TargetType="Label" x:Key="RouterStyle" >
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="20" />

            <Setter Property="Foreground" Value="#858080"  />
        </Style>

        <Style TargetType="Label" x:Key="statusStyle">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="19" />

            <Setter Property="Foreground" Value="#858080"  />
        </Style>

        <Style TargetType="Label" x:Key="valueStyle">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />

            <Setter Property="Foreground" Value="#b1b1b1"  />
        </Style>


        <Style TargetType="Label" x:Key="titleStyle">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Rectangle Height="{TemplateBinding Height}"  
                           Fill="Gray" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style 
           x:Key="blueButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF29AFFF"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF1D8DD1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="windowButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="White"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFCECED4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="grayButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF9C9C9C"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF8B8B8B"/>
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style 
           x:Key="settingButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="Transparent"  />
            <Setter Property="Foreground" Value="Black"  />
        </Style>
        <Style 
           x:Key="greenButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF00B800"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF009700"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="redButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FFFF4646" />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFFF2D2D"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="orangeButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FFF1B761"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFEEA02E"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="noConnection">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="White"  />

            <Setter Property="BorderBrush" Value="White"  />
        </Style>
        <Style TargetType="Label" x:Key="title">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="12" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>


        <Style TargetType="Label" x:Key="values">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="14" />

            <Setter Property="Foreground" Value="#FFA6A6A6"  />
        </Style>
        <Style TargetType="Label" x:Key="titles">


            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="14" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>

        <Style TargetType="Label" x:Key="info">

            <Setter Property="FontWeight" Value="Normal"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="15" />

            <Setter Property="Opacity" Value="0.5"  />
            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>

        <Style TargetType="Label" x:Key="error">

            <Setter Property="FontWeight" Value="Normal"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Foreground" Value="Red"  />
            <Setter Property="Opacity" Value="0.5"  />

        </Style>


    </Window.Resources>
    
    <StackPanel Orientation="Vertical">

        <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
            <Image x:Name="imgRouterr" Source="Resources/logo9.png"   HorizontalAlignment="Center"  Opacity="100"  Width="155" Height="126" Grid.Row="1"    
       RenderOptions.EdgeMode="Aliased" 
               RenderOptions.BitmapScalingMode="HighQuality" 
               >


            </Image>
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,-12,0,0" VerticalAlignment="Center">
                <Label Content="MyRouter Beta" HorizontalAlignment="Center" FontSize="20" VerticalAlignment="Center"></Label>
                <Label HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="version" Content="Version"></Label>
                <Label HorizontalAlignment="Center" VerticalAlignment="Center"  Content="App created by"></Label>
                <Label HorizontalAlignment="Center" VerticalAlignment="Center"  Content="oussama reguez (oussamareguez@gmail.com)"></Label>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">


                    <TextBlock>
        <Hyperlink x:Name="facebookLink" NavigateUri="https://www.facebook.com/oussamareguez"
                  TextDecorations="None" Click="facebookLink_Click">
            <Image  Source="Resources/facebook.png"   HorizontalAlignment="Center"  Opacity="100"  Width="32" Height="32" Grid.Row="1"    
       RenderOptions.EdgeMode="Aliased" 
               RenderOptions.BitmapScalingMode="Fant" 
               >
                    </Image>
        </Hyperlink>
                    </TextBlock>


                    <Separator Width="5" Opacity="0"></Separator>
                    <TextBlock>
        <Hyperlink x:Name="twitterLink" NavigateUri="https://twitter.com/oussamareguea"
                  TextDecorations="None" Click="twitterLink_Click">
            <Image  Source="Resources/twitter.png"   HorizontalAlignment="Center"  Opacity="100"  Width="32" Height="32" Grid.Row="1"    
       RenderOptions.EdgeMode="Aliased" 
               RenderOptions.BitmapScalingMode="Fant" 
               >
                    </Image>
        </Hyperlink>
                    </TextBlock>


                </StackPanel>
            </StackPanel>
        </StackPanel>


        <Separator Height="10" Opacity="0">

        </Separator>


        <Border HorizontalAlignment="Center" Width="Auto" Height="Auto"  BorderThickness="1" >
            <Border.BorderBrush>
                <SolidColorBrush Color="Black" Opacity="0.2" />
            </Border.BorderBrush>
            <StackPanel Orientation="Vertical"  x:Name="releasePanel" Visibility="Collapsed"  HorizontalAlignment="Center">

                <Label Content="Release Notes :" HorizontalAlignment="Center">
                </Label>
                <TextBlock x:Name="releaseNote" HorizontalAlignment="Center">
                </TextBlock>


            </StackPanel>
        </Border>
        <Separator Height="10" Opacity="0">

        </Separator>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Button HorizontalAlignment="Center" Content="Check for update"  IsEnabled="False" Style="{StaticResource ResourceKey=blueButton}" Width="110" Height="25" Click="checkUpdate"></Button>
            <Separator Width="10" Opacity="0"></Separator>
            <Button HorizontalAlignment="Center" Content="Feedback" Width="80" Style="{StaticResource ResourceKey=greenButton}" Height="25" Click="Button_Click"></Button>
        </StackPanel>




        <Separator Height="5" Opacity="0"></Separator>
        <StackPanel Orientation="Vertical" >


        </StackPanel>
        <Separator Height="5" Opacity="0"></Separator>
        <Button Content="Close" HorizontalAlignment="Center" Style="{StaticResource grayButton}" Width="80" Click="close_click"></Button>
        <Separator Height="10" Opacity="0"></Separator>

    </StackPanel>
</Controls:MetroWindow>
