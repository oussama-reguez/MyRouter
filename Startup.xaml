<Controls:MetroWindow 
     xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    x:Class="WpfApplication4.Startup"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication4"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d"
       ResizeMode="NoResize"
     NonActiveWindowTitleBrush="White"
     WindowTitleBrush="White"
                       WindowCloseButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
                       WindowMinButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
        xmlns:l="clr-namespace:myRouter"
   BorderBrush="Black"
    BorderThickness="1"
         Height="340"  Width="300" >

    <Window.Resources>
        
        <Style x:Key="CleanCloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">

            <Setter Property="Foreground"
                Value="Black" />
            <Style.Triggers>


                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBFBFBF" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF8D8D8D" />
                </Trigger>

            </Style.Triggers>
        </Style>
        <Style 
           x:Key="restartButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#4598aa"  />
            <Setter Property="Foreground" Value="White"  />
        </Style>

        <Style 
           x:Key="reconnectButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#06a319"  />
            <Setter Property="Foreground" Value="White"  />
        </Style>


        <Style TargetType="Label" x:Key="RouterStyle" >
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="20" />

            <Setter Property="Foreground" Value="#858080"  />
        </Style>

        <Style TargetType="Label" x:Key="statusStyle">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="19" />

            <Setter Property="Foreground" Value="#858080"  />
        </Style>

        <Style TargetType="Label" x:Key="valueStyle">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />

            <Setter Property="Foreground" Value="#b1b1b1"  />
        </Style>


        <Style TargetType="Label" x:Key="titleStyle">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Rectangle Height="{TemplateBinding Height}"  
                           Fill="Gray" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style 
           x:Key="blueButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF29AFFF"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF1D8DD1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="windowButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="120" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="White"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFCECED4"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="grayButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF9C9C9C"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF8B8B8B"/>
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style 
           x:Key="settingButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="Transparent"  />
            <Setter Property="Foreground" Value="Black"  />
        </Style>
        <Style 
           x:Key="greenButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FF00B800"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF009700"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="redButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FFFF4646" />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFFF2D2D"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style 
           x:Key="orangeButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="#FFF1B761"  />
            <Setter Property="Foreground" Value="White"  />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFEEA02E"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" x:Key="noConnection">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="White"  />

            <Setter Property="BorderBrush" Value="White"  />
        </Style>
        <Style TargetType="Label" x:Key="title">

            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="12" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>


        <Style TargetType="Label" x:Key="values">
            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="14" />

            <Setter Property="Foreground" Value="#FFA6A6A6"  />
        </Style>
        <Style TargetType="Label" x:Key="titles">


            <Setter Property="FontWeight" Value="Regular"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="14" />


            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>

        <Style TargetType="Label" x:Key="info">

            <Setter Property="FontWeight" Value="Normal"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="15" />

            <Setter Property="Opacity" Value="0.5"  />
            <Setter Property="BorderBrush" Value="#1FA3FF"  />
        </Style>

        <Style TargetType="Label" x:Key="error">

            <Setter Property="FontWeight" Value="Normal"  />
            <Setter Property="FontFamily" Value="Myriad Pro Regular" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Foreground" Value="Red"  />
            <Setter Property="Opacity" Value="0.5"  />

        </Style>
        <Storyboard x:Key="transition_download">
            <ObjectAnimationUsingKeyFrames 
    BeginTime="00:00:00" 
     
               
    Storyboard.TargetName="image"
    Storyboard.TargetProperty="(Image.Source)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <BitmapImage  UriSource="Resources/router_download.png" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>

        </Storyboard>

        <Storyboard x:Key="transition_find">
            <ObjectAnimationUsingKeyFrames 
    BeginTime="00:00:00" 
     
               
    Storyboard.TargetName="image"
    Storyboard.TargetProperty="(Image.Source)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <BitmapImage  UriSource="Resources/router_find.png" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="transition_connect">
            <ObjectAnimationUsingKeyFrames 
    BeginTime="00:00:00" 
     
               
    Storyboard.TargetName="image"
    Storyboard.TargetProperty="(Image.Source)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <BitmapImage  UriSource="Resources/router_connect.png" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="transition_refresh">
            <ObjectAnimationUsingKeyFrames 
    BeginTime="00:00:00" 
     
               
    Storyboard.TargetName="image"
    Storyboard.TargetProperty="(Image.Source)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                    <DiscreteObjectKeyFrame.Value>
                        <BitmapImage  UriSource="Resources/router_refresh.png" />
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>

        </Storyboard>

        <Storyboard x:Key="12" x:Name="MyCoolStoryboard"  >
            <ThicknessAnimation
        Storyboard.TargetProperty="BorderThickness"
        Duration="0:0:1.5" FillBehavior="HoldEnd" From="4,60,-2,-8" To="4,24,-2,28" />

        </Storyboard>

        <Storyboard x:Key="TestStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" 
                         To="-50"/>

            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0"
                         To="1" />
        </Storyboard>
        <Storyboard x:Key="gridAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1"
                         To="0" Duration="0:1:0"/>


        </Storyboard>
    </Window.Resources>


    

    <StackPanel Orientation="Vertical" >

        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="17,0,17,-31">

            <Grid  HorizontalAlignment="Center"  Visibility="Visible" x:Name="secondGrid"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"   />
                    <RowDefinition   />
                    <RowDefinition Height="Auto"   />
                    <RowDefinition Height="Auto"   />
                    <RowDefinition Height="Auto"   />
                    <RowDefinition Height="Auto"   />
                    <RowDefinition Height="Auto"   />


                </Grid.RowDefinitions>
                <Image x:Name="imgRouterr" Source="Resources/router_connect.png" HorizontalAlignment="Center"  Opacity="100"  Width="100" Height="100" Grid.Row="1"    
       RenderOptions.EdgeMode="Aliased" 
               RenderOptions.BitmapScalingMode="Fant" 
               >
                    <Image.Effect   >

                        <DropShadowEffect  Direction="0"  x:Name="routerEffect"     ShadowDepth="1" Color="LightGray" BlurRadius="5"  Opacity="1"    />
                    </Image.Effect>
                </Image>
                <Label Content="info  "  Style="{StaticResource ResourceKey=titleStyle}"  Grid.Row="2" x:Name="info" HorizontalAlignment="Center" >

                </Label>
                <Button Content="Retry" Style="{StaticResource ResourceKey=grayButton}"  x:Name="retry" Grid.Row="3" Width="50" Click="retry_Click"  Visibility="Collapsed" ></Button>
                <StackPanel Orientation="Vertical" x:Name="authenticationStack" Visibility="Collapsed" Margin="0,5,0,0" HorizontalAlignment="Center" Grid.Row="4" >
                    <StackPanel Orientation="Vertical"  >
                        <Label  Content="Authentication"      HorizontalAlignment="Center"  Style="{StaticResource ResourceKey=titleStyle}"/>
                        <Label  Content="Enter username and password"  Margin="0,-15,0,0"  HorizontalAlignment="Center"     Style="{StaticResource ResourceKey=info}" />
                    </StackPanel>
                    <Label    x:Name="error"  Visibility="Collapsed"   HorizontalAlignment="Center" Style="{StaticResource ResourceKey=error}"></Label>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"   />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />


                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Content="Username" Grid.Row="0" Style="{StaticResource ResourceKey=title}" />
                        <TextBox  x:Name="txtUsername" Grid.Row="0" Grid.Column="1" Width="120"/>
                        <Separator Height="4" Opacity="0" Grid.Row="1"></Separator>
                        <Label Content="Password " Grid.Row="2" Style="{StaticResource ResourceKey=title}" />
                        <TextBox  x:Name="txtPassword"  Grid.Row="2" Grid.Column="1" Width="120"/>
                    </Grid>
                    <StackPanel Orientation="Vertical"  >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                        </StackPanel>




                    </StackPanel>
                    <Button Content="Connect" Margin="0,10,0,0" Style="{StaticResource ResourceKey=blueButton}" Grid.Row="6"   Width="80" Click="connect" ></Button>
                </StackPanel>


            </Grid>
            <Grid x:Name="firstGrid"  Margin="0,25,0,0" Height="270" HorizontalAlignment="Center" Opacity="1" Visibility="Collapsed"  VerticalAlignment="Center"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="90"   />
                    <RowDefinition Height="Auto"   />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"   />
                </Grid.RowDefinitions>
                <Image x:Name="imgRouter"  Source="Resources/router_settings.png" HorizontalAlignment="Center"  Opacity="100"  Width="83" Height="110" Grid.Row="0"    
       RenderOptions.EdgeMode="Aliased"
               RenderOptions.BitmapScalingMode="Fant" 
               >

                    <Image.Effect   >

                        <DropShadowEffect  Direction="0"    ShadowDepth="1" Color="LightGray" BlurRadius="5"  Opacity="1"    />
                    </Image.Effect>
                </Image>
                <Label  Content="Router Setup"    Grid.Row="1"  HorizontalAlignment="Center"  Style="{StaticResource ResourceKey=titleStyle}"/>
                <Label  Content="select your router from the list bellow"    HorizontalAlignment="Center"  Grid.Row="1"  Margin="0,20,0,0" Style="{StaticResource ResourceKey=info}" Grid.RowSpan="2"/>

                <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Margin="26,0,55,0" Grid.Row="3" HorizontalAlignment="Center">

                    <Label Content="Router Model" Style="{StaticResource title}"></Label>

                    <ComboBox x:Name="comboBox" Width="135"
            
              >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}:{1}">
                                            <Binding Path="BrandName"/>
                                            <Binding Path="Model"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                </StackPanel>
                <Button x:Name="button" Content="Confirm"  Width="75" Click="button_Click"  Style="{StaticResource blueButton}" HorizontalAlignment="Center" Grid.Row="4" Margin="0,18,0,0" />
            </Grid>
        </StackPanel>
    </StackPanel>











</Controls:MetroWindow>
